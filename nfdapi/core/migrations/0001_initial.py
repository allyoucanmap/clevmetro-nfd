# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-14 08:51
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnimalLifestages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('egg', models.IntegerField()),
                ('egg_mass', models.IntegerField()),
                ('nest', models.IntegerField()),
                ('early_instar_larva', models.IntegerField()),
                ('larva', models.IntegerField()),
                ('late_instar_larva', models.IntegerField()),
                ('early_instar_nymph', models.IntegerField()),
                ('nymph', models.IntegerField()),
                ('late_instar_nymph', models.IntegerField()),
                ('early_pupa', models.IntegerField()),
                ('pupa', models.IntegerField()),
                ('late_pupa', models.IntegerField()),
                ('juvenile', models.IntegerField()),
                ('immature', models.IntegerField()),
                ('subadult', models.IntegerField()),
                ('adult', models.IntegerField()),
                ('adult_pregnant_or_young', models.IntegerField()),
                ('senescent', models.IntegerField()),
                ('unknown', models.IntegerField()),
                ('na', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='AquaticHabitatCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AquaticSampler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChannelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CmStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='DiseasesAndAbnormalities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElementNaturalAreas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('natural_area_code_nac', models.TextField()),
                ('general_description', models.TextField()),
                ('area', models.FloatField()),
                ('landscape_position', models.TextField()),
                ('cm_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.CmStatus')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElementSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('native', models.BooleanField(default=True)),
                ('other_code', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ElementType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tsn', models.IntegerField(blank=True)),
                ('name_sci', models.TextField()),
                ('common_name', models.TextField()),
                ('second_common', models.TextField()),
                ('third_common', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grank', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='HmfeiLocalAbundance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IucnRedListCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LakeMicrohabitat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoticHabitatType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Marks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MushroomGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nrank', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='OccurenceNaturalArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('released', models.BooleanField(default=False)),
                ('inclusion_date', models.DateTimeField()),
                ('natural_area_element', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ElementNaturalAreas')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OccurenceTaxon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('released', models.BooleanField(default=False)),
                ('inclusion_date', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OccurrenceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PondLakeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PondLakeUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegionalStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShorelineType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SlimeMoldClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SlimeMoldLifestages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SlimeMoldMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tsn', models.IntegerField(blank=True)),
                ('name_sci', models.TextField()),
                ('synonym', models.TextField()),
                ('first_common', models.TextField()),
                ('second_common', models.TextField()),
                ('third_common', models.TextField()),
                ('family', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Family')),
            ],
        ),
        migrations.CreateModel(
            name='SRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('srank', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='StreamDesignatedUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StreamSubstracte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artificial', models.FloatField()),
                ('bedrock', models.FloatField()),
                ('boulder', models.FloatField()),
                ('boulder_slab', models.FloatField()),
                ('clay_hardpan', models.FloatField()),
                ('cobble', models.FloatField()),
                ('fine_detritus', models.FloatField()),
                ('gravel', models.FloatField()),
                ('leafpack_woody_debris', models.FloatField()),
                ('muck', models.FloatField()),
                ('sand', models.FloatField()),
                ('silt', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='TaxonDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TerrestrialSampler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TerrestrialStratum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UsfwsStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voucher_number', models.PositiveIntegerField()),
                ('specimen_collected', models.BooleanField(default=False)),
                ('parts_collected', models.BooleanField(default=False)),
                ('specimen_number', models.BooleanField(default=False)),
                ('minumero', models.IntegerField(default=0)),
                ('mitextin', models.IntegerField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WaterFlowType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WaterSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WetlandConnectivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WetlandHabitatFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WetlandLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WetlandType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WetlandVetegationStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buttonbush', models.FloatField()),
                ('cattail', models.FloatField()),
                ('ferns', models.FloatField()),
                ('forbs', models.FloatField()),
                ('phragmites', models.FloatField()),
                ('sedges', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ElementBird',
            fields=[
                ('elementspecies_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.ElementSpecies')),
                ('ibp_english', models.CharField(max_length=4)),
                ('ibp_scientific', models.CharField(max_length=6)),
                ('bblab_number', models.CharField(max_length=6)),
            ],
            bases=('core.elementspecies',),
        ),
        migrations.CreateModel(
            name='ElementCrustacean',
            fields=[
                ('elementspecies_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.ElementSpecies')),
                ('epa_numeric_code', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('core.elementspecies', models.Model),
        ),
        migrations.CreateModel(
            name='ElementFlatworm',
            fields=[
                ('elementspecies_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.ElementSpecies')),
                ('epa_numeric_code', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('core.elementspecies', models.Model),
        ),
        migrations.CreateModel(
            name='ElementFungus',
            fields=[
                ('elementspecies_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.ElementSpecies')),
                ('epa_numeric_code', models.TextField()),
                ('nrcs_usda_symbol', models.TextField()),
                ('synonym_nrcs_usda_symbol', models.TextField()),
                ('mushroom_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.MushroomGroup')),
            ],
            options={
                'abstract': False,
            },
            bases=('core.elementspecies', models.Model),
        ),
        migrations.CreateModel(
            name='ElementInsect',
            fields=[
                ('elementspecies_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.ElementSpecies')),
                ('epa_numeric_code', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('core.elementspecies', models.Model),
        ),
        migrations.CreateModel(
            name='ElementMolusc',
            fields=[
                ('elementspecies_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.ElementSpecies')),
                ('epa_numeric_code', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('core.elementspecies', models.Model),
        ),
        migrations.CreateModel(
            name='ElementPlant',
            fields=[
                ('elementspecies_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.ElementSpecies')),
                ('epa_numeric_code', models.TextField()),
                ('nrcs_usda_symbol', models.TextField()),
                ('synonym_nrcs_usda_symbol', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('core.elementspecies', models.Model),
        ),
        migrations.CreateModel(
            name='ElementRoundworm',
            fields=[
                ('elementspecies_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.ElementSpecies')),
                ('epa_numeric_code', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('core.elementspecies', models.Model),
        ),
        migrations.CreateModel(
            name='ElementSegmentedWorm',
            fields=[
                ('elementspecies_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.ElementSpecies')),
                ('epa_numeric_code', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('core.elementspecies', models.Model),
        ),
        migrations.CreateModel(
            name='ElementSessileAnimal',
            fields=[
                ('elementspecies_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.ElementSpecies')),
                ('epa_numeric_code', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('core.elementspecies', models.Model),
        ),
        migrations.CreateModel(
            name='PondLakeAnimalDetails',
            fields=[
                ('taxondetails_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.TaxonDetails')),
                ('lentic_size_acres_aprox', models.IntegerField()),
                ('lentic_size_squaremeters_aprox', models.IntegerField()),
                ('lentic_size_acres_exact', models.DecimalField(decimal_places=1, max_digits=6)),
                ('lentic_size_squaremeters_exact', models.DecimalField(decimal_places=1, max_digits=8)),
                ('pond_lake_name', models.TextField()),
                ('microhabitat_comments', models.TextField()),
                ('diseases_and_abnormalities', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.DiseasesAndAbnormalities')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Gender')),
                ('lifestages', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.AnimalLifestages')),
                ('marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Marks')),
                ('microhabitat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.LakeMicrohabitat')),
                ('pond_lake_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.PondLakeType')),
                ('pond_lake_use', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.PondLakeUse')),
                ('sampler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.AquaticSampler')),
                ('shoreline_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ShorelineType')),
            ],
            options={
                'abstract': False,
            },
            bases=('core.taxondetails', models.Model),
        ),
        migrations.CreateModel(
            name='SlimeMoldDetails',
            fields=[
                ('taxondetails_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.TaxonDetails')),
                ('lifestages', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.SlimeMoldLifestages')),
                ('slime_mold_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.SlimeMoldClass')),
                ('slime_mold_media', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.SlimeMoldMedia')),
            ],
            bases=('core.taxondetails',),
        ),
        migrations.CreateModel(
            name='StreamAnimalDetails',
            fields=[
                ('taxondetails_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.TaxonDetails')),
                ('stream_name_1', models.TextField()),
                ('stream_name_2', models.TextField()),
                ('pemso_code', models.TextField()),
                ('channel_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ChannelType')),
                ('designated_use', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.StreamDesignatedUse')),
                ('diseases_and_abnormalities', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.DiseasesAndAbnormalities')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Gender')),
                ('hmfei_local_abundance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.HmfeiLocalAbundance')),
                ('lifestages', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.AnimalLifestages')),
                ('lotic_habitat_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.LoticHabitatType')),
                ('marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Marks')),
                ('sampler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.AquaticSampler')),
                ('substrate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.StreamSubstracte')),
                ('water_flow_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.WaterFlowType')),
            ],
            options={
                'abstract': False,
            },
            bases=('core.taxondetails',),
        ),
        migrations.CreateModel(
            name='WetlandAnimalDetails',
            fields=[
                ('taxondetails_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.TaxonDetails')),
                ('lentic_size_acres_aprox', models.IntegerField()),
                ('lentic_size_squaremeters_aprox', models.IntegerField()),
                ('lentic_size_acres_exact', models.DecimalField(decimal_places=1, max_digits=6)),
                ('lentic_size_squaremeters_exact', models.DecimalField(decimal_places=1, max_digits=8)),
                ('wetland_name', models.TextField()),
                ('active_management', models.NullBooleanField()),
                ('connectivity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.WetlandConnectivity')),
                ('diseases_and_abnormalities', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.DiseasesAndAbnormalities')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Gender')),
                ('habitat_feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.WetlandHabitatFeature')),
                ('lifestages', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.AnimalLifestages')),
                ('marks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Marks')),
                ('sampler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.AquaticSampler')),
                ('vegetation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.WetlandVetegationStructure')),
                ('water_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.WaterSource')),
                ('wetland_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.WetlandLocation')),
                ('wetland_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.WetlandType')),
            ],
            options={
                'abstract': False,
            },
            bases=('core.taxondetails', models.Model),
        ),
        migrations.AddField(
            model_name='occurencetaxon',
            name='details',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.TaxonDetails'),
        ),
        migrations.AddField(
            model_name='occurencetaxon',
            name='occurrence_cat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.OccurrenceCategory'),
        ),
        migrations.AddField(
            model_name='occurencetaxon',
            name='species_element',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ElementSpecies'),
        ),
        migrations.AddField(
            model_name='occurencetaxon',
            name='voucher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Voucher'),
        ),
        migrations.AddField(
            model_name='occurencenaturalarea',
            name='occurrence_cat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.OccurrenceCategory'),
        ),
        migrations.AddField(
            model_name='elementspecies',
            name='iucn_red_list_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.IucnRedListCategory'),
        ),
        migrations.AddField(
            model_name='elementspecies',
            name='oh_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.RegionalStatus'),
        ),
        migrations.AddField(
            model_name='elementspecies',
            name='species',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Species'),
        ),
        migrations.AddField(
            model_name='elementspecies',
            name='species_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ElementType'),
        ),
        migrations.AddField(
            model_name='elementspecies',
            name='usfws_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.UsfwsStatus'),
        ),
        migrations.AddField(
            model_name='elementnaturalareas',
            name='g_rank',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.GRank'),
        ),
        migrations.AddField(
            model_name='elementnaturalareas',
            name='n_rank',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.NRank'),
        ),
        migrations.AddField(
            model_name='elementnaturalareas',
            name='s_rank',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.SRank'),
        ),
    ]
